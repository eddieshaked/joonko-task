{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eddie\\\\Desktop\\\\frontend_assessmnet\\\\client\\\\src\\\\components\\\\PrivateRoute\\\\PrivateRoute.jsx\",\n    _s = $RefreshSig$();\n\nfunction cov_j5sxsowwi() {\n  var path = \"C:\\\\Users\\\\Eddie\\\\Desktop\\\\frontend_assessmnet\\\\client\\\\src\\\\components\\\\PrivateRoute\\\\PrivateRoute.jsx\";\n  var hash = \"ed4917c9de39379740684460047fb310491c06a3\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\Eddie\\\\Desktop\\\\frontend_assessmnet\\\\client\\\\src\\\\components\\\\PrivateRoute\\\\PrivateRoute.jsx\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 4,\n          column: 21\n        },\n        end: {\n          line: 24,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 5,\n          column: 15\n        },\n        end: {\n          line: 5,\n          column: 24\n        }\n      },\n      \"2\": {\n        start: {\n          line: 7,\n          column: 2\n        },\n        end: {\n          line: 23,\n          column: 4\n        }\n      },\n      \"3\": {\n        start: {\n          line: 11,\n          column: 8\n        },\n        end: {\n          line: 20,\n          column: 9\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 4,\n            column: 21\n          },\n          end: {\n            line: 4,\n            column: 22\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 48\n          },\n          end: {\n            line: 24,\n            column: 1\n          }\n        },\n        line: 4\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 10,\n            column: 14\n          },\n          end: {\n            line: 10,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 11,\n            column: 8\n          },\n          end: {\n            line: 20,\n            column: 9\n          }\n        },\n        line: 11\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 11,\n            column: 8\n          },\n          end: {\n            line: 20,\n            column: 9\n          }\n        },\n        type: \"cond-expr\",\n        locations: [{\n          start: {\n            line: 12,\n            column: 10\n          },\n          end: {\n            line: 12,\n            column: 18\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 10\n          },\n          end: {\n            line: 19,\n            column: 12\n          }\n        }],\n        line: 11\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    b: {\n      \"0\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"ed4917c9de39379740684460047fb310491c06a3\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_j5sxsowwi = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_j5sxsowwi();\nimport { useAuth } from '../../context/auth';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncov_j5sxsowwi().s[0]++;\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    children,\n    ...rest\n  } = _ref;\n  cov_j5sxsowwi().f[0]++;\n  const auth = (cov_j5sxsowwi().s[1]++, useAuth());\n  cov_j5sxsowwi().s[2]++;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      cov_j5sxsowwi().f[1]++;\n      cov_j5sxsowwi().s[3]++;\n      return auth.user ? (cov_j5sxsowwi().b[0][0]++, children) : (cov_j5sxsowwi().b[0][1]++, /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this));\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"YuJWYXaKIY31b1y7U6yy3IXSxQA=\", false, function () {\n  return [useAuth];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useAuth","Route","Redirect","PrivateRoute","children","rest","auth","location","user","pathname","state","from"],"sources":["C:/Users/Eddie/Desktop/frontend_assessmnet/client/src/components/PrivateRoute/PrivateRoute.jsx"],"sourcesContent":["import {useAuth} from '../../context/auth'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  const auth = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth.user ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default PrivateRoute"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAeY;;;;;;;;;AAfZ,SAAQA,OAAR,QAAsB,oBAAtB;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;;;;AAEA,MAAMC,YAAY,GAAG,QAA2B;EAAA;;EAAA,IAA1B;IAAEC,QAAF;IAAY,GAAGC;EAAf,CAA0B;EAAA;EAC9C,MAAMC,IAAI,4BAAGN,OAAO,EAAV,CAAV;EAD8C;EAG9C,oBACE,QAAC,KAAD,OACMK,IADN;IAEE,MAAM,EAAE,SACN;MAAA,IADO;QAAEE;MAAF,CACP;MAAA;MAAA;MAAA,OAAAD,IAAI,CAACE,IAAL,+BACEJ,QADF,6CAGE,QAAC,QAAD;QACE,EAAE,EAAE;UACFK,QAAQ,EAAE,QADR;UAEFC,KAAK,EAAE;YAAEC,IAAI,EAAEJ;UAAR;QAFL;MADN;QAAA;QAAA;QAAA;MAAA,QAHF;IASC;EAZL;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CApBD;;GAAMJ,Y;UACSH,O;;;KADTG,Y;AAsBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}